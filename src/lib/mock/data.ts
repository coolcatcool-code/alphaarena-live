import type { AIModel, AISnapshot, Position, Trade } from '@/types'

// AI Models 基础数据
export const aiModels: Record<string, AIModel> = {
  'deepseek-1': {
    id: 'deepseek-1',
    name: 'DeepSeek',
    avatar: null,
    description: 'Aggressive momentum trading strategy',
    color: '#10B981',
    createdAt: new Date('2025-10-15'),
    updatedAt: new Date(),
  },
  'claude-1': {
    id: 'claude-1',
    name: 'Claude Sonnet',
    avatar: null,
    description: 'Conservative value investing approach',
    color: '#3B82F6',
    createdAt: new Date('2025-10-15'),
    updatedAt: new Date(),
  },
  'chatgpt-1': {
    id: 'chatgpt-1',
    name: 'ChatGPT',
    avatar: null,
    description: 'Balanced multi-asset strategy',
    color: '#8B5CF6',
    createdAt: new Date('2025-10-15'),
    updatedAt: new Date(),
  },
  'qwen-1': {
    id: 'qwen-1',
    name: 'Qwen',
    avatar: null,
    description: 'Medium swing trading approach',
    color: '#06B6D4',
    createdAt: new Date('2025-10-15'),
    updatedAt: new Date(),
  },
  'grok-1': {
    id: 'grok-1',
    name: 'Grok',
    avatar: null,
    description: 'High-frequency scalping attempts',
    color: '#F59E0B',
    createdAt: new Date('2025-10-15'),
    updatedAt: new Date(),
  },
  'gemini-1': {
    id: 'gemini-1',
    name: 'Gemini',
    avatar: null,
    description: 'Reactive trading with variable positions',
    color: '#EF4444',
    createdAt: new Date('2025-10-15'),
    updatedAt: new Date(),
  },
}

// Mock 快照数据（排行榜）
export const mockSnapshots: AISnapshot[] = [
  {
    id: '1',
    aiModelId: 'deepseek-1',
    currentPnL: 40.5,
    totalAssets: 14050,
    openPositions: 3,
    winRate: 68.2,
    rank: 1,
    rankChange: 0,
    timestamp: new Date(),
    aiModel: aiModels['deepseek-1'],
  },
  {
    id: '2',
    aiModelId: 'claude-1',
    currentPnL: 12.3,
    totalAssets: 11230,
    openPositions: 2,
    winRate: 58.5,
    rank: 2,
    rankChange: 1,
    timestamp: new Date(),
    aiModel: aiModels['claude-1'],
  },
  {
    id: '3',
    aiModelId: 'chatgpt-1',
    currentPnL: -5.2,
    totalAssets: 9480,
    openPositions: 1,
    winRate: 45.8,
    rank: 3,
    rankChange: -1,
    timestamp: new Date(),
    aiModel: aiModels['chatgpt-1'],
  },
  {
    id: '4',
    aiModelId: 'qwen-1',
    currentPnL: -12.8,
    totalAssets: 8720,
    openPositions: 4,
    winRate: 38.2,
    rank: 4,
    rankChange: 0,
    timestamp: new Date(),
    aiModel: aiModels['qwen-1'],
  },
  {
    id: '5',
    aiModelId: 'grok-1',
    currentPnL: -28.5,
    totalAssets: 7150,
    openPositions: 2,
    winRate: 32.1,
    rank: 5,
    rankChange: 1,
    timestamp: new Date(),
    aiModel: aiModels['grok-1'],
  },
  {
    id: '6',
    aiModelId: 'gemini-1',
    currentPnL: -35.2,
    totalAssets: 6480,
    openPositions: 1,
    winRate: 28.7,
    rank: 6,
    rankChange: -1,
    timestamp: new Date(),
    aiModel: aiModels['gemini-1'],
  },
]

// Mock 持仓数据
export const mockPositions: Position[] = [
  // DeepSeek - 3 positions
  {
    id: 'pos-1',
    aiModelId: 'deepseek-1',
    symbol: 'BTC',
    side: 'LONG',
    entryPrice: 94200,
    currentPrice: 95420,
    size: 5000,
    leverage: 2,
    pnl: 129.63,
    pnlPercentage: 1.29,
    status: 'OPEN',
    openedAt: new Date(Date.now() - 3 * 60 * 60 * 1000), // 3 hours ago
    aiModel: aiModels['deepseek-1'],
  },
  {
    id: 'pos-2',
    aiModelId: 'deepseek-1',
    symbol: 'ETH',
    side: 'LONG',
    entryPrice: 3480,
    currentPrice: 3580,
    size: 3000,
    leverage: 3,
    pnl: 86.21,
    pnlPercentage: 2.87,
    status: 'OPEN',
    openedAt: new Date(Date.now() - 5 * 60 * 60 * 1000), // 5 hours ago
    aiModel: aiModels['deepseek-1'],
  },
  {
    id: 'pos-3',
    aiModelId: 'deepseek-1',
    symbol: 'SOL',
    side: 'LONG',
    entryPrice: 182,
    currentPrice: 185,
    size: 2000,
    leverage: 2,
    pnl: 32.97,
    pnlPercentage: 1.65,
    status: 'OPEN',
    openedAt: new Date(Date.now() - 1 * 60 * 60 * 1000), // 1 hour ago
    aiModel: aiModels['deepseek-1'],
  },
  // Claude - 2 positions
  {
    id: 'pos-4',
    aiModelId: 'claude-1',
    symbol: 'ETH',
    side: 'LONG',
    entryPrice: 3520,
    currentPrice: 3580,
    size: 4000,
    leverage: 1,
    pnl: 68.18,
    pnlPercentage: 1.70,
    status: 'OPEN',
    openedAt: new Date(Date.now() - 8 * 60 * 60 * 1000), // 8 hours ago
    aiModel: aiModels['claude-1'],
  },
  {
    id: 'pos-5',
    aiModelId: 'claude-1',
    symbol: 'BTC',
    side: 'LONG',
    entryPrice: 95000,
    currentPrice: 95420,
    size: 3000,
    leverage: 1,
    pnl: 13.26,
    pnlPercentage: 0.44,
    status: 'OPEN',
    openedAt: new Date(Date.now() - 2 * 60 * 60 * 1000), // 2 hours ago
    aiModel: aiModels['claude-1'],
  },
  // ChatGPT - 1 position
  {
    id: 'pos-6',
    aiModelId: 'chatgpt-1',
    symbol: 'SOL',
    side: 'SHORT',
    entryPrice: 188,
    currentPrice: 185,
    size: 2500,
    leverage: 2,
    pnl: 79.79,
    pnlPercentage: 3.19,
    status: 'OPEN',
    openedAt: new Date(Date.now() - 4 * 60 * 60 * 1000), // 4 hours ago
    aiModel: aiModels['chatgpt-1'],
  },
  // Qwen - 4 positions
  {
    id: 'pos-7',
    aiModelId: 'qwen-1',
    symbol: 'BTC',
    side: 'LONG',
    entryPrice: 96000,
    currentPrice: 95420,
    size: 2000,
    leverage: 2,
    pnl: -24.17,
    pnlPercentage: -1.21,
    status: 'OPEN',
    openedAt: new Date(Date.now() - 6 * 60 * 60 * 1000),
    aiModel: aiModels['qwen-1'],
  },
  {
    id: 'pos-8',
    aiModelId: 'qwen-1',
    symbol: 'ETH',
    side: 'LONG',
    entryPrice: 3600,
    currentPrice: 3580,
    size: 1500,
    leverage: 3,
    pnl: -25.00,
    pnlPercentage: -1.67,
    status: 'OPEN',
    openedAt: new Date(Date.now() - 3 * 60 * 60 * 1000),
    aiModel: aiModels['qwen-1'],
  },
  {
    id: 'pos-9',
    aiModelId: 'qwen-1',
    symbol: 'SOL',
    side: 'SHORT',
    entryPrice: 180,
    currentPrice: 185,
    size: 1000,
    leverage: 2,
    pnl: -55.56,
    pnlPercentage: -5.56,
    status: 'OPEN',
    openedAt: new Date(Date.now() - 12 * 60 * 60 * 1000),
    aiModel: aiModels['qwen-1'],
  },
  {
    id: 'pos-10',
    aiModelId: 'qwen-1',
    symbol: 'AVAX',
    side: 'LONG',
    entryPrice: 38.5,
    currentPrice: 39.2,
    size: 800,
    leverage: 2,
    pnl: 29.09,
    pnlPercentage: 3.64,
    status: 'OPEN',
    openedAt: new Date(Date.now() - 1 * 60 * 60 * 1000),
    aiModel: aiModels['qwen-1'],
  },
  // Grok - 2 positions
  {
    id: 'pos-11',
    aiModelId: 'grok-1',
    symbol: 'BTC',
    side: 'SHORT',
    entryPrice: 94800,
    currentPrice: 95420,
    size: 1500,
    leverage: 5,
    pnl: -97.87,
    pnlPercentage: -6.52,
    status: 'OPEN',
    openedAt: new Date(Date.now() - 30 * 60 * 1000), // 30 min ago
    aiModel: aiModels['grok-1'],
  },
  {
    id: 'pos-12',
    aiModelId: 'grok-1',
    symbol: 'ETH',
    side: 'LONG',
    entryPrice: 3550,
    currentPrice: 3580,
    size: 1000,
    leverage: 4,
    pnl: 33.80,
    pnlPercentage: 3.38,
    status: 'OPEN',
    openedAt: new Date(Date.now() - 45 * 60 * 1000), // 45 min ago
    aiModel: aiModels['grok-1'],
  },
  // Gemini - 1 position
  {
    id: 'pos-13',
    aiModelId: 'gemini-1',
    symbol: 'SOL',
    side: 'LONG',
    entryPrice: 190,
    currentPrice: 185,
    size: 1200,
    leverage: 3,
    pnl: -94.74,
    pnlPercentage: -7.89,
    status: 'OPEN',
    openedAt: new Date(Date.now() - 10 * 60 * 60 * 1000),
    aiModel: aiModels['gemini-1'],
  },
]

// Mock 交易历史数据（最近 50 条）
export const mockTrades: Trade[] = [
  // 最近的交易（用于实时交易流）
  {
    id: 'trade-1',
    aiModelId: 'deepseek-1',
    action: 'BUY',
    symbol: 'BTC',
    side: 'LONG',
    amount: 2000,
    price: 95420,
    leverage: 2,
    pnl: 0,
    fee: 1.91,
    timestamp: new Date(Date.now() - 2 * 1000), // 2 seconds ago
    aiModel: aiModels['deepseek-1'],
  },
  {
    id: 'trade-2',
    aiModelId: 'gemini-1',
    action: 'SELL',
    symbol: 'ETH',
    side: 'LONG',
    amount: 1500,
    price: 3580,
    leverage: 2,
    pnl: -450.25,
    fee: 5.37,
    timestamp: new Date(Date.now() - 15 * 1000), // 15 seconds ago
    aiModel: aiModels['gemini-1'],
  },
  {
    id: 'trade-3',
    aiModelId: 'claude-1',
    action: 'BUY',
    symbol: 'SOL',
    side: 'LONG',
    amount: 1500,
    price: 185,
    leverage: 1,
    pnl: 0,
    fee: 1.39,
    timestamp: new Date(Date.now() - 32 * 1000), // 32 seconds ago
    aiModel: aiModels['claude-1'],
  },
  {
    id: 'trade-4',
    aiModelId: 'chatgpt-1',
    action: 'SELL',
    symbol: 'BTC',
    side: 'SHORT',
    amount: 3000,
    price: 95200,
    leverage: 2,
    pnl: 220.50,
    fee: 5.71,
    timestamp: new Date(Date.now() - 58 * 1000), // 58 seconds ago
    aiModel: aiModels['chatgpt-1'],
  },
  {
    id: 'trade-5',
    aiModelId: 'grok-1',
    action: 'BUY',
    symbol: 'ETH',
    side: 'LONG',
    amount: 800,
    price: 3575,
    leverage: 5,
    pnl: 0,
    fee: 2.86,
    timestamp: new Date(Date.now() - 72 * 1000), // 1 min 12s ago
    aiModel: aiModels['grok-1'],
  },
  {
    id: 'trade-6',
    aiModelId: 'qwen-1',
    action: 'CLOSE',
    symbol: 'AVAX',
    side: 'LONG',
    amount: 500,
    price: 39.1,
    leverage: 2,
    pnl: 15.64,
    fee: 0.98,
    timestamp: new Date(Date.now() - 125 * 1000), // 2 min 5s ago
    aiModel: aiModels['qwen-1'],
  },
  {
    id: 'trade-7',
    aiModelId: 'deepseek-1',
    action: 'SELL',
    symbol: 'SOL',
    side: 'LONG',
    amount: 1000,
    price: 184.5,
    leverage: 2,
    pnl: 92.35,
    fee: 1.85,
    timestamp: new Date(Date.now() - 3 * 60 * 1000), // 3 min ago
    aiModel: aiModels['deepseek-1'],
  },
  {
    id: 'trade-8',
    aiModelId: 'claude-1',
    action: 'BUY',
    symbol: 'BTC',
    side: 'LONG',
    amount: 3000,
    price: 95000,
    leverage: 1,
    pnl: 0,
    fee: 2.85,
    timestamp: new Date(Date.now() - 5 * 60 * 1000), // 5 min ago
    aiModel: aiModels['claude-1'],
  },
]

// 生成更多历史交易数据
export function generateMockTradeHistory(aiModelId?: string, limit: number = 50): Trade[] {
  const symbols = ['BTC', 'ETH', 'SOL', 'AVAX', 'ARB', 'OP']
  const actions: ('BUY' | 'SELL' | 'CLOSE')[] = ['BUY', 'SELL', 'CLOSE']
  const sides: ('LONG' | 'SHORT')[] = ['LONG', 'SHORT']

  const trades: Trade[] = []
  const modelIds = aiModelId ? [aiModelId] : Object.keys(aiModels)

  for (let i = 0; i < limit; i++) {
    const modelId = modelIds[Math.floor(Math.random() * modelIds.length)]
    const symbol = symbols[Math.floor(Math.random() * symbols.length)]
    const action = actions[Math.floor(Math.random() * actions.length)]
    const side = sides[Math.floor(Math.random() * sides.length)]

    trades.push({
      id: `trade-history-${i}`,
      aiModelId: modelId,
      action,
      symbol,
      side,
      amount: Math.random() * 5000 + 500,
      price: Math.random() * 100000 + 1000,
      leverage: Math.floor(Math.random() * 5) + 1,
      pnl: (Math.random() - 0.5) * 1000,
      fee: Math.random() * 10,
      timestamp: new Date(Date.now() - i * 30 * 60 * 1000), // Every 30 minutes
      aiModel: aiModels[modelId],
    })
  }

  return trades
}
