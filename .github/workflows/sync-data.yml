name: Sync Data Every 5 Minutes

on:
  schedule:
    # Runs every 5 minutes
    - cron: '*/5 * * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  sync:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Trigger Data Synchronization
        run: |
          echo "Starting data sync at $(date)"
          echo "Target URL: https://alphaarena-live.pages.dev/api/cron/sync-all"

          # Check if CRON_SECRET is set
          if [ -z "${{ secrets.CRON_SECRET }}" ]; then
            echo "❌ Error: CRON_SECRET is not set in GitHub Secrets"
            echo "Please add CRON_SECRET in Repository Settings → Secrets → Actions"
            exit 1
          fi

          echo "CRON_SECRET is set: ${#CRON_SECRET} characters"

          # Make the request with verbose error handling
          echo "Making API request..."
          http_code=$(curl -X GET \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            -w "%{http_code}" \
            -s \
            -o /tmp/response.json \
            --connect-timeout 30 \
            --max-time 120 \
            https://alphaarena-live.pages.dev/api/cron/sync-all)

          curl_exit_code=$?

          if [ $curl_exit_code -ne 0 ]; then
            echo "❌ curl command failed with exit code: $curl_exit_code"
            case $curl_exit_code in
              6) echo "Error: Could not resolve host. Check if the domain is correct." ;;
              7) echo "Error: Failed to connect to host." ;;
              28) echo "Error: Timeout reached." ;;
              *) echo "Error: Unknown curl error." ;;
            esac
            exit 1
          fi

          body=$(cat /tmp/response.json)

          echo "HTTP Status: $http_code"
          echo "Response: $body"

          if [ "$http_code" -ge 200 ] && [ "$http_code" -lt 300 ]; then
            echo "✅ Data sync completed successfully"
          else
            echo "❌ Data sync failed with status $http_code"
            exit 1
          fi
        env:
          CRON_SECRET: ${{ secrets.CRON_SECRET }}

      - name: Summary
        if: always()
        run: |
          echo "### Data Sync Result" >> $GITHUB_STEP_SUMMARY
          echo "Timestamp: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "Endpoint: https://alphaarena-live.pages.dev/api/cron/sync-all" >> $GITHUB_STEP_SUMMARY
